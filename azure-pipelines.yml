# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  chromeVersion: '100.0.4896.75'

steps:

# - pwsh: |
#    echo "##vso[task.prependpath]$env:CHROMEWEBDRIVER"
#   displayName: Adds ChromeWebDriver for Selenium to PATH 
  
- task: PowerShell@2
  displayName: 'We want to know the Chrome version installed on this darned machine'
  inputs:
    targetType: 'inline'
    script: '(Get-Item "C:\Program Files\Google\Chrome\Application\chrome.exe").VersionInfo'

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 5.0.100'
  inputs:
    packageType: 'sdk'
    version: '5.0.100'
    includePreviewVersions: false

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.8'
    checkLatest: true

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*Test/*.csproj'
    feedsToUse: 'select'
    noCache: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Test/*.csproj'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build test'
  inputs:
    projects: '**/*Test/*.csproj'
    arguments: '--runtime win-x64'
  continueOnError: true



- task: DotNetCoreCLI@2
  displayName: 'dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/TechFabricSln/TechFabricSln.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/TechFabricSln'
    zipAfterPublish: false

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#   inputs:
#     command: 'publish'
#     publishWebProjects: false
#     projects: 'src/TechFabricSln/TechFabricSln.csproj'
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/TechFabricSln'
#     zipAfterPublish: false

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish test --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'test/TechFabricSln.Test/TechFabricSln.Test.csproj'
    arguments: '-p:PublishChromeDriver=true --runtime win-x64 --output $(Build.ArtifactStagingDirectory)/TechFabricSln.Test'
    modifyOutputPath: true
    zipAfterPublish: false

- task: PublishBuildArtifacts@1
  displayName: 'publish artifacts'
